class TreeNode {
	public int val;
	public List<TreeNode> children;

	public TreeNode(int val) {
		this.val = val;
		this.children = new ArrayList<TreeNode>();
	}


}

public class maxAverage {
	public int getmaxave(TreeNode root) {
		if(root == null) {
			return 0;
		}
		TreeNode cur = root;
		int[] globle_max = new int[] {Integer.MIN_VALUE};
		helper(root, cur, globle_max);
		return cur;

	}

	private int helper(TreeNode root, TreeNode cur, int[] globle_max) {
		if(root == null) {
			return 0;
		}

		int tmp = 0;
		for(TreeNode node : children) {
			tmp += helper(node,cur,globlemax);
		}

		int count = children.size()ï¼›
		if(tmp / (count + 1) > globlemax[0]) {
			globlemax[0] = tmp / (count + 1;
			cur = root;
		}

		return root.val + tmp;
	}


}
