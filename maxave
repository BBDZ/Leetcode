class TreeNode {
	public int val;
	public List<TreeNode> children;

	public TreeNode(int val) {
		this.val = val;
		this.children = new ArrayList<TreeNode>();
	}


}

public class maxAverage {
	public TreeNode getmaxave(TreeNode root) {
		if(root == null) {
			return 0;
		}
		TreeNode cur = root;
		double[] globle_max = new int[] {Integer.MIN_VALUE};
		helper(root, cur, globle_max);
		return cur;

	}

	private int[] helper(TreeNode root, TreeNode cur, double[] globle_max) {
		int[] result = new int[2]{0,0};
		
		if(root == null) {
		  	return result;
		}

		//int sum = 0;
		//int child = 0;
		
		for(TreeNode node : children) {
			int[] tmp = helper(node,cur,globlemax);
			result[0] += tmp[0];
			result[1] += tmp[1];
		}

		result[0] += root.val;
		result[1] ++;
		if(sum / child > globlemax[0]) {
			globlemax[0] = sum / child;
			cur = root;
		}

		return result;
	}


}
