/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
public class Solution {
    public List<List<Integer>> levelOrder(TreeNode root) {
        if(root == null) {
            return new ArrayList<List<Integer>>();
        }
        
        
        List<List<Integer>> level = new ArrayList<List<Integer>>();
        Deque<TreeNode> queue = new LinkedList<TreeNode>();
        queue.offerFirst(root);
        int size;
        
        while(!queue.isEmpty()) {
            size = queue.size();
            List<Integer> result = new ArrayList<Integer>();
            
            for(int i = 0; i < size; i++) {
                TreeNode cur = queue.pollLast();
                result.add(cur.val);
                if(cur.left != null) {
                    queue.offerFirst(cur.left);
                }
                if(cur.right != null) {
                   queue.offerFirst(cur.right); 
                }
                
            }
            level.add(result);
        }
        return level;
    }
}
