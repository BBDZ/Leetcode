public class Solution {
    public int findKthLargest(int[] nums, int k) {
        //List<Integer> result = new ArrayList<Integer>();
        if(nums == null || nums.length == 0) {
            return -1;
        }
        
        PriorityQueue<Integer> maxheap = new PriorityQueue<Integer>(k,  new Comparator<Integer>() {
            @Override
            public int compare(Integer one, Integer two) {
                if(one.equals(two)) {
                    return 0;
                }
                return one < two ? 1 : -1;
            }
            
        });
        
        for(int i = 0; i < nums.length; i++) {
            maxheap.offer(nums[i]);
        }
        
        for(int j = 0; j < k - 1; j++) {
            maxheap.poll();
        }
        
        return maxheap.poll();
    }
}
