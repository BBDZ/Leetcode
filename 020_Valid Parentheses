public class Solution {
    public boolean isValid(String s) {
        if(s == null || s.length() == 0 || s.length() % 2 != 0) {
            return false;
        }
        Deque<Character> stack = new LinkedList<Character>();
        char[] array = s.toCharArray();
        
        for(int i = 0; i < array.length; i++) {
            if(array[i] == '(' || array[i] == '[' || array[i] == '{') {
                stack.offerFirst(array[i]);
            }else if(stack.isEmpty()) {
                return false;
            }else {
                char cur = stack.pollFirst();
                if(array[i] == ')') {
                    if(cur != '(') {
                        return false;
                    }
                }else if(array[i] == ']') {
                    if(cur != '[') {
                        return false;
                    }
                }else if(array[i] == '}') {
                    if(cur != '{') {
                        return false;
                    }
                }
            }
        }
        return stack.isEmpty();
 
    } 
}
